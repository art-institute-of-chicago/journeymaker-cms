<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.3" jmeter="2.8 r1393162">
    <hashTree>
        <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="BlazeMeter Drupal 7 Test Plan" enabled="true">
            <stringProp name="TestPlan.comments"></stringProp>
            <boolProp name="TestPlan.functional_mode">false</boolProp>
            <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
            <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                    <elementProp name="Duration" elementType="Argument">
                        <stringProp name="Argument.name">Duration</stringProp>
                        <stringProp name="Argument.value">3180</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Host" elementType="Argument">
                        <stringProp name="Argument.name">Host</stringProp>
                        <stringProp name="Argument.value">${__P(Host,0.0.0.0)}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Auth" elementType="Argument">
                        <stringProp name="Argument.name">Auth</stringProp>
                        <stringProp name="Argument.value">${__P(Auth,0)}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Anon" elementType="Argument">
                        <stringProp name="Argument.name">Anon</stringProp>
                        <stringProp name="Argument.value">${__P(Anon,0)}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Rampup" elementType="Argument">
                        <stringProp name="Argument.name">Rampup</stringProp>
                        <stringProp name="Argument.value">${__P(Rampup,1800)}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Delay" elementType="Argument">
                        <stringProp name="Argument.name">Delay</stringProp>
                        <stringProp name="Argument.value">${__P(Delay,10000)}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Protocol" elementType="Argument">
                        <stringProp name="Argument.name">Protocol</stringProp>
                        <stringProp name="Argument.value">${__P(Protocol,http)}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Login" elementType="Argument">
                        <stringProp name="Argument.name">Login</stringProp>
                        <stringProp name="Argument.value">${__P(Login,/user/login)}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="DrupalPath" elementType="Argument">
                        <stringProp name="Argument.name">DrupalPath</stringProp>
                        <stringProp name="Argument.value">${__P(DrupalPath,)}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                </collectionProp>
            </elementProp>
            <stringProp name="TestPlan.user_define_classpath"></stringProp>
        </TestPlan>
        <hashTree>
            <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
                <boolProp name="clearEachIteration">true</boolProp>
                <boolProp name="useExpires">true</boolProp>
            </CacheManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-us,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                    </elementProp>
                    <elementProp name="Keep-Alive" elementType="Header">
                        <stringProp name="Header.name">Keep-Alive</stringProp>
                        <stringProp name="Header.value">115</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip,deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Charset" elementType="Header">
                        <stringProp name="Header.name">Accept-Charset</stringProp>
                        <stringProp name="Header.value">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>
                    </elementProp>
                </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${Host}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.image_parser">true</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            </ConfigTestElement>
            <hashTree/>
            <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Anonymous" enabled="true">
                <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                    <boolProp name="LoopController.continue_forever">false</boolProp>
                    <intProp name="LoopController.loops">-1</intProp>
                </elementProp>
                <stringProp name="ThreadGroup.num_threads">${Anon}</stringProp>
                <stringProp name="ThreadGroup.ramp_time">${Rampup}</stringProp>
                <longProp name="ThreadGroup.start_time">1278085071000</longProp>
                <longProp name="ThreadGroup.end_time">1278085071000</longProp>
                <boolProp name="ThreadGroup.scheduler">false</boolProp>
                <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
                <stringProp name="ThreadGroup.duration"></stringProp>
                <stringProp name="ThreadGroup.delay"></stringProp>
            </ThreadGroup>
            <hashTree>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="anon1" enabled="false">
                    <boolProp name="displayJMeterProperties">false</boolProp>
                    <boolProp name="displayJMeterVariables">true</boolProp>
                    <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
                <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
                    <collectionProp name="CookieManager.cookies"/>
                    <boolProp name="CookieManager.clearEachIteration">true</boolProp>
                    <stringProp name="CookieManager.policy">default</stringProp>
                    <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
                </CookieManager>
                <hashTree/>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
                <hashTree>
                    <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Start" enabled="true">
                        <intProp name="ActionProcessor.action">1</intProp>
                        <intProp name="ActionProcessor.target">0</intProp>
                        <stringProp name="ActionProcessor.duration">0</stringProp>
                    </TestAction>
                    <hashTree>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                            <collectionProp name="UserParameters.names">
                                <stringProp name="73174740">Label</stringProp>
                            </collectionProp>
                            <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-2101813012">
                                    <stringProp name="80204866">Start</stringProp>
                                </collectionProp>
                            </collectionProp>
                            <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                    </hashTree>
                    <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__javaScript(&quot;${URL}&quot;!=&quot;Stop&quot;)}</stringProp>
                    </WhileController>
                    <hashTree>
                        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                            <stringProp name="delimiter">,</stringProp>
                            <stringProp name="fileEncoding"></stringProp>
                            <stringProp name="filename">anon_pages.csv</stringProp>
                            <boolProp name="quotedData">true</boolProp>
                            <boolProp name="recycle">true</boolProp>
                            <stringProp name="shareMode">Current thread</stringProp>
                            <boolProp name="stopThread">false</boolProp>
                            <stringProp name="variableNames">URL,Label</stringProp>
                        </CSVDataSet>
                        <hashTree/>
                        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="anon2" enabled="false">
                            <boolProp name="displayJMeterProperties">false</boolProp>
                            <boolProp name="displayJMeterVariables">true</boolProp>
                            <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugSampler>
                        <hashTree/>
                        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                            <stringProp name="IfController.condition">&quot;${URL}&quot; != &apos;Stop&apos;</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                        </IfController>
                        <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${Label}" enabled="true">
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                    <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain"></stringProp>
                                <stringProp name="HTTPSampler.port"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout">60000</stringProp>
                                <stringProp name="HTTPSampler.response_timeout">120000</stringProp>
                                <stringProp name="HTTPSampler.protocol"></stringProp>
                                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                                <stringProp name="HTTPSampler.path">${URL}</stringProp>
                                <stringProp name="HTTPSampler.method">GET</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                                <boolProp name="HTTPSampler.image_parser">true</boolProp>
                                <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
                                <boolProp name="HTTPSampler.monitor">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree/>
                            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Delay" enabled="true">
                                <intProp name="ActionProcessor.action">1</intProp>
                                <intProp name="ActionProcessor.target">0</intProp>
                                <stringProp name="ActionProcessor.duration">${Delay}</stringProp>
                            </TestAction>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Delay" enabled="true">
                        <intProp name="ActionProcessor.action">1</intProp>
                        <intProp name="ActionProcessor.target">0</intProp>
                        <stringProp name="ActionProcessor.duration">0</stringProp>
                    </TestAction>
                    <hashTree>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                            <collectionProp name="UserParameters.names">
                                <stringProp name="73174740">URL</stringProp>
                            </collectionProp>
                            <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-2101813012">
                                    <stringProp name="80204866">Start</stringProp>
                                </collectionProp>
                            </collectionProp>
                            <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                    </hashTree>
                </hashTree>
            </hashTree>
            <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Authenticated" enabled="true">
                <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                    <boolProp name="LoopController.continue_forever">false</boolProp>
                    <intProp name="LoopController.loops">-1</intProp>
                </elementProp>
                <stringProp name="ThreadGroup.num_threads">${Auth}</stringProp>
                <stringProp name="ThreadGroup.ramp_time">${Rampup}</stringProp>
                <longProp name="ThreadGroup.start_time">1278085071000</longProp>
                <longProp name="ThreadGroup.end_time">1278085071000</longProp>
                <boolProp name="ThreadGroup.scheduler">false</boolProp>
                <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
                <stringProp name="ThreadGroup.duration"></stringProp>
                <stringProp name="ThreadGroup.delay"></stringProp>
            </ThreadGroup>
            <hashTree>
                <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
                    <collectionProp name="CookieManager.cookies"/>
                    <boolProp name="CookieManager.clearEachIteration">true</boolProp>
                    <stringProp name="CookieManager.policy">default</stringProp>
                    <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
                </CookieManager>
                <hashTree/>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
                <hashTree>
                    <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="auth_users.csv" enabled="true">
                        <stringProp name="delimiter">,</stringProp>
                        <stringProp name="fileEncoding"></stringProp>
                        <stringProp name="filename">auth_users.csv</stringProp>
                        <boolProp name="quotedData">true</boolProp>
                        <boolProp name="recycle">true</boolProp>
                        <stringProp name="shareMode">Current thread group</stringProp>
                        <boolProp name="stopThread">false</boolProp>
                        <stringProp name="variableNames">user,password</stringProp>
                    </CSVDataSet>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="home" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">${DrupalPath}/user</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                        <boolProp name="HTTPSampler.image_parser">true</boolProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="form_build_id" enabled="true">
                            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                            <stringProp name="RegexExtractor.refname">form_build_id</stringProp>
                            <stringProp name="RegexExtractor.regex">name=&quot;form_build_id&quot; value=&quot;(.*)&quot;</stringProp>
                            <stringProp name="RegexExtractor.template">$1$</stringProp>
                            <stringProp name="RegexExtractor.default"></stringProp>
                            <stringProp name="RegexExtractor.match_number">1</stringProp>
                        </RegexExtractor>
                        <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                            <collectionProp name="Arguments.arguments">
                                <elementProp name="name" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.name">name</stringProp>
                                    <stringProp name="Argument.value">${user}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                </elementProp>
                                <elementProp name="pass" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.name">pass</stringProp>
                                    <stringProp name="Argument.value">${password}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                </elementProp>
                                <elementProp name="form_build_id" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.name">form_build_id</stringProp>
                                    <stringProp name="Argument.value">${form_build_id}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                </elementProp>
                                <elementProp name="form_id" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.name">form_id</stringProp>
                                    <stringProp name="Argument.value">user_login</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                </elementProp>
                                <elementProp name="op" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.name">op</stringProp>
                                    <stringProp name="Argument.value">Log+in</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                </elementProp>
                            </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">${DrupalPath}/user</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                        <boolProp name="HTTPSampler.image_parser">true</boolProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Login Assertion - ${user}" enabled="true">
                            <collectionProp name="Asserion.test_strings">
                                <stringProp name="-1704528459">id=\&quot;user-login\&quot;</stringProp>
                            </collectionProp>
                            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                            <boolProp name="Assertion.assume_success">false</boolProp>
                            <intProp name="Assertion.test_type">6</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                    </hashTree>
                    <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="auth1" enabled="false">
                        <boolProp name="displayJMeterProperties">false</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySystemProperties">false</boolProp>
                    </DebugSampler>
                    <hashTree/>
                    <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
                        <boolProp name="displayJMeterProperties">true</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySystemProperties">true</boolProp>
                    </DebugSampler>
                    <hashTree/>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
                    <hashTree>
                        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Start" enabled="true">
                            <intProp name="ActionProcessor.action">1</intProp>
                            <intProp name="ActionProcessor.target">0</intProp>
                            <stringProp name="ActionProcessor.duration">0</stringProp>
                        </TestAction>
                        <hashTree>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                                <collectionProp name="UserParameters.names">
                                    <stringProp name="73174740">Label</stringProp>
                                </collectionProp>
                                <collectionProp name="UserParameters.thread_values">
                                    <collectionProp name="-2101813012">
                                        <stringProp name="80204866">Start</stringProp>
                                    </collectionProp>
                                </collectionProp>
                                <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__javaScript(&quot;${URL}&quot; != &quot;Stop&quot;)}</stringProp>
                        </WhileController>
                        <hashTree>
                            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="auth_pages.csv" enabled="true">
                                <stringProp name="delimiter">,</stringProp>
                                <stringProp name="fileEncoding"></stringProp>
                                <stringProp name="filename">auth_pages.csv</stringProp>
                                <boolProp name="quotedData">true</boolProp>
                                <boolProp name="recycle">true</boolProp>
                                <stringProp name="shareMode">Current thread</stringProp>
                                <boolProp name="stopThread">false</boolProp>
                                <stringProp name="variableNames">URL,Label</stringProp>
                            </CSVDataSet>
                            <hashTree/>
                            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="auth pages" enabled="false">
                                <boolProp name="displayJMeterProperties">false</boolProp>
                                <boolProp name="displayJMeterVariables">true</boolProp>
                                <boolProp name="displaySystemProperties">false</boolProp>
                            </DebugSampler>
                            <hashTree/>
                            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                                <stringProp name="IfController.condition">&quot;${URL}&quot; != &quot;Stop&quot;</stringProp>
                                <boolProp name="IfController.evaluateAll">false</boolProp>
                            </IfController>
                            <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${Label}" enabled="true">
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                        <collectionProp name="Arguments.arguments"/>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain"></stringProp>
                                    <stringProp name="HTTPSampler.port"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout">60000</stringProp>
                                    <stringProp name="HTTPSampler.response_timeout">120000</stringProp>
                                    <stringProp name="HTTPSampler.protocol"></stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                                    <stringProp name="HTTPSampler.path">${URL}</stringProp>
                                    <stringProp name="HTTPSampler.method">GET</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                                    <boolProp name="HTTPSampler.image_parser">true</boolProp>
                                    <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
                                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree/>
                                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Delay" enabled="true">
                                    <intProp name="ActionProcessor.action">1</intProp>
                                    <intProp name="ActionProcessor.target">0</intProp>
                                    <stringProp name="ActionProcessor.duration">${__P(Delay)}</stringProp>
                                </TestAction>
                                <hashTree/>
                            </hashTree>
                        </hashTree>
                        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Delay" enabled="true">
                            <intProp name="ActionProcessor.action">1</intProp>
                            <intProp name="ActionProcessor.target">0</intProp>
                            <stringProp name="ActionProcessor.duration">0</stringProp>
                        </TestAction>
                        <hashTree>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                                <collectionProp name="UserParameters.names">
                                    <stringProp name="73174740">URL</stringProp>
                                </collectionProp>
                                <collectionProp name="UserParameters.thread_values">
                                    <collectionProp name="-2101813012">
                                        <stringProp name="80204866">Start</stringProp>
                                    </collectionProp>
                                </collectionProp>
                                <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                </hashTree>
            </hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                        <time>true</time>
                        <latency>true</latency>
                        <timestamp>true</timestamp>
                        <success>true</success>
                        <label>true</label>
                        <code>true</code>
                        <message>true</message>
                        <threadName>true</threadName>
                        <dataType>true</dataType>
                        <encoding>false</encoding>
                        <assertions>true</assertions>
                        <subresults>true</subresults>
                        <responseData>false</responseData>
                        <samplerData>false</samplerData>
                        <xml>true</xml>
                        <fieldNames>false</fieldNames>
                        <responseHeaders>false</responseHeaders>
                        <requestHeaders>false</requestHeaders>
                        <responseDataOnError>false</responseDataOnError>
                        <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                        <assertionsResultsToSave>0</assertionsResultsToSave>
                        <bytes>true</bytes>
                    </value>
                </objProp>
                <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
        </hashTree>
    </hashTree>
</jmeterTestPlan>